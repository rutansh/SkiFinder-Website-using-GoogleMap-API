{"ast":null,"code":"import _slicedToArray from \"D:\\\\ReactProject2\\\\websitemap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ReactProject2\\\\websitemap\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as parksData from \"./data/skateboard-parks.json\";\n\nfunction Map() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedPark = _useState2[0],\n        setSelectedPark = _useState2[1];\n\n  return React.createElement(GoogleMap, {\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 45.4211,\n      lng: -75.6903\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, parksData.features.map(park => React.createElement(Marker, {\n    key: park.properties.PARK_ID,\n    position: {\n      lat: park.geometry.coordinates[1],\n      lng: park.geometry.coordinates[0]\n    },\n    onClick: () => {\n      setSelectedPark(park);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), selectedPark && React.createElement(InfoWindow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Park details\"), \"position=\", {\n    lat: selectedPark.geometry.coordinates[1],\n    lng: selectedPark.geometry.coordinates[0]\n  }, \"}}\"));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nfunction App() {\n  return React.createElement(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyC-bxoipOpE8IMUOVP39DEClzZwLDVKXWI`,\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/ReactProject2/websitemap/src/App.js"],"names":["React","useState","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","parksData","Map","selectedPark","setSelectedPark","lat","lng","features","map","park","properties","PARK_ID","geometry","coordinates","WrappedMap","App","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,OAAO,WAAP;AACA,SAAQC,SAAR,EAAkBC,YAAlB,EAA+BC,aAA/B,EAA6CC,MAA7C,EAAoDC,UAApD,QAAqE,mBAArE;AACA,OAAO,KAAKC,SAAZ,MAA2B,8BAA3B;;AAGA,SAASC,GAAT,GACA;AAAA,oBACuCP,QAAQ,CAAC,IAAD,CAD/C;AAAA;AAAA,QACSQ,YADT;AAAA,QACsBC,eADtB;;AAEE,SACA,oBAAC,SAAD;AACA,IAAA,WAAW,EAAE,EADb;AAEA,IAAA,aAAa,EAAE;AAACC,MAAAA,GAAG,EAAC,OAAL;AAAaC,MAAAA,GAAG,EAAC,CAAC;AAAlB,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAICL,SAAS,CAACM,QAAV,CAAmBC,GAAnB,CAAuBC,IAAI,IAC1B,oBAAC,MAAD;AACA,IAAA,GAAG,EAAEA,IAAI,CAACC,UAAL,CAAgBC,OADrB;AAEA,IAAA,QAAQ,EAAE;AAAEN,MAAAA,GAAG,EAAEI,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAAP;AACVP,MAAAA,GAAG,EAACG,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B;AADM,KAFV;AAKA,IAAA,OAAO,EAAE,MAAI;AAEXT,MAAAA,eAAe,CAACK,IAAD,CAAf;AACD,KARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJD,EAiBGN,YAAY,IACX,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEY;AACLE,IAAAA,GAAG,EAAEF,YAAY,CAACS,QAAb,CAAsBC,WAAtB,CAAkC,CAAlC,CADA;AAELP,IAAAA,GAAG,EAACH,YAAY,CAACS,QAAb,CAAsBC,WAAtB,CAAkC,CAAlC;AAFC,GAFZ,OAlBJ,CADA;AAgCD;;AACD,MAAMC,UAAU,GAACjB,YAAY,CAACC,aAAa,CAACI,GAAD,CAAd,CAA7B;;AACA,SAASa,GAAT,GAAe;AACb,SAEE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,OAAP;AAAeC,MAAAA,MAAM,EAAC;AAAtB,KAAZ;AAA2C,IAAA,SAAS,EAAC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,YAAY,EAAG,+HAA3B;AACA,IAAA,cAAc,EAAE;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB;AAEA,IAAA,gBAAgB,EAAE;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlB;AAGA,IAAA,UAAU,EAAE;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAWD;;AAED,eAAeF,GAAf","sourcesContent":["import React,{useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {GoogleMap,withScriptjs,withGoogleMap,Marker,InfoWindow} from \"react-google-maps\";\nimport * as parksData from \"./data/skateboard-parks.json\";\n\n\nfunction Map()\n{\n  const [selectedPark,setSelectedPark]=useState(null);\n  return (\n  <GoogleMap \n  defaultZoom={10} \n  defaultCenter={{lat:45.4211,lng:-75.6903}}\n  >\n  {parksData.features.map(park=>(\n    <Marker \n    key={park.properties.PARK_ID} \n    position={{ lat: park.geometry.coordinates[1],\n    lng:park.geometry.coordinates[0]}}\n\n    onClick={()=>{\n\n      setSelectedPark(park);\n    }}\n    />\n    ))\n    }\n    {selectedPark &&( \n      <InfoWindow>\n        <div>Park details</div>\n        position={{\n             lat: selectedPark.geometry.coordinates[1],\n             lng:selectedPark.geometry.coordinates[0]}}\n          \n        }}\n\n      </InfoWindow>\n    )}\n  \n  </GoogleMap>\n  );\n}\nconst WrappedMap=withScriptjs(withGoogleMap(Map));\nfunction App() {\n  return (\n\n    <div style={{width:'100vw',height:'100vh'}}className=\"App\">\n      <WrappedMap googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyC-bxoipOpE8IMUOVP39DEClzZwLDVKXWI`}\n      loadingElement={<div style={{height:\"100%\"}}/>}\n      containerElement={<div style={{height:\"100%\"}}/>}\n      mapElement={<div style={{height:\"100%\"}}/>}\n      \n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}